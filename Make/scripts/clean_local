#
# A file that is sourced by build-2 to make it a bit simpler.
# However, because it is sourced, we need to be careful about setting any
# variables that are using in build-2, such as 'count'.

${VERBOSE_ECHO_2} "Entering script clean_local in ${cwd}"

pushd ${MAKE_PATH} > /dev/null
    set make_dir_cwd = "${cwd}"
popd > /dev/null

if ("${cwd}" == "${make_dir_cwd}") then
    echo "Script clean_local is refusing to clean ${MAKE_PATH} as this is were we keep original Makefiles." 
    exit
endif 

if (-e Include_lines) then
    ${VERBOSE_ECHO_2} "Script clean_local is removing Include_lines" 

    # I cannot remember why we do not just use RM, since this also takes out the
    # directory.
    #
    # find Include_lines -delete
    ${IVI_RM} Include_lines
endif 

# We now delete Makefile-2 for library and program dirs, as it is automatically
# built in those two cases. But currently, for the archive directories,
# Makefile-2 is hand build and we should not delete it. 
#
# We expect this file to be sourced by a script that knows what kind of
# directory we are in (e.g., either build-2 or clean_global which itself is
# sourced by build-2. But, just in case this is not so, which is the case if
# test this script by sourcing it from the command line, we follow the same
# heuristic as build-2. We cannot just check if it has been set, as this breaks
# unit testing.

set is_archive_dir = `echo $cwd | ${IVI_EGREP} -c '\/IVI$|\/IVI_cpp$'`

if (${is_archive_dir}) then
    set delete_list = `/bin/ls -1 | grep 'Makefile.' | grep -v 'Makefile-2$'  `
else
    set delete_list = `/bin/ls -1 | grep 'Makefile.' `
endif 

if ("${delete_list}" != "") then
    ${VERBOSE_ECHO_2} "Clean local is removing: ${delete_list} in ${cwd}."
    ${IVI_RM} ${delete_list}
endif 

set file_count = `/bin/ls -1 | grep -c _incl.h`

if (${file_count} > 0) then
    ${VERBOSE_ECHO_2} "Clean local is removing '*_incl.h' in ${cwd}."
    ${IVI_RM} *_incl.h* 
endif 

set file_count = `/bin/ls -1 | grep -c '^kjb_all_'`

if (${file_count} > 0) then
    ${IVI_RM} kjb_all_* 
endif 

set file_count = `/bin/ls -1 | grep -c '^ivi_all_'`

if (${file_count} > 0) then
    ${VERBOSE_ECHO_2} "Clean local is removing 'ivi_all_*' in ${cwd}."
    ${IVI_RM} ivi_all_* 
endif 

${VERBOSE_ECHO_2} "Leaving script clean_local in ${cwd}"



