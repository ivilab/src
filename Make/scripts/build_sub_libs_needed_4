#!/bin/tcsh -f

##################################################################################
#
#

if ($# != 1) then
    ${P_STDERR} "Script build_sub_libs_needed_4 takes just 1 arg. Called with $*"
    exit 1
endif 

set recurse_dir_str = "${1}"

set exit_status = 0

    ${VERBOSE_ECHO_2} " "
    ${VERBOSE_ECHO_2} "${VERBOSE_INDENT}------- build_sub_libs_needed_4 considering ${recurse_dir_str} ----------"
    ${VERBOSE_ECHO_2} " "

    pushd ${recurse_dir_str} > /dev/null
        ${IVI_MKDIR} Include_lines
        if (${status}) then
            set exit_status = 1
            goto end_of_script
        endif 

        ${MAKE_SCRIPT_PATH}ivi_lock_for_make 120 Include_lines/file_list ${MAKE_SCRIPT_PATH}build_file_list_2
        if (${status}) then
            set exit_status = 1
            goto end_of_script
        endif 

#         if (! -e Include_lines/include_lines.new) then
#             echo "We expect ${cwd}/Include_lines/include_lines.new to exist!"
#         else if (! -e Include_lines/include_lines) then
#             echo "We expect ${cwd}/Include_lines/include_lines to exist!"
#         endif 

        set need_to_build = 0

        # These tests should mimic the ones below checked after trying to build. 

        if (! -e "Include_lines/sub_libs_needed") then
            ${VERBOSE_ECHO_2} "${VERBOSE_INDENT}------- ${cwd}/Include_lines/sub_libs_needed does not exist (need to build)  ----------"
            set need_to_build = 1
        else if (! -e "Include_lines/include_lines") then
            ${VERBOSE_ECHO_2} "${VERBOSE_INDENT}------- ${cwd}/Include_lines/include_lines does not exist (need to build)  ----------"
            set need_to_build = 1
        else  
            set too_old = `${MAKE_SCRIPT_PATH}test_older_than Include_lines/sub_libs_needed Include_lines/include_lines`
            if (${too_old}) then
                ${VERBOSE_ECHO_2} "${VERBOSE_INDENT}------- ${cwd}/Include_lines/sub_libs_needed is too old (need to build) ----------"
                set need_to_build = 1
            endif 
        endif 

        if (! ${need_to_build}) then
            if ($?FORCE_BUILD_SUB_LIBS) then
                ${VERBOSE_ECHO_2} "${VERBOSE_INDENT}------- ${cwd}/Include_lines/sub_libs_needed needs to be built as we are FORCING doing so ----------"
                set need_to_build = 1
            endif 
        endif 

        if (${need_to_build}) then
            ${VERBOSE_ECHO} "${VERBOSE_INDENT}------- build_sub_libs_needed_4 building sub_libs_needed in ${recurse_dir_str} ----------"
            ${VERBOSE_ECHO} " "

            # This is the recursive call, as build_include_lines_2 calls
            # this script (build_sub_libs_needed).
            
                # Usually FORCE_BUILD_SUB_LIBS is set, so the -f should have no
                # effect. It is also not clear if using force is needed as our
                # tests for updating should work. We had some issues that might
                # be solved by our choice to always update the local
                # sub_libs_needed timestamp. Under investigation.
                
                # 893 is a unique approximation of 900
                ${MAKE_SCRIPT_PATH}ivi_lock_for_make 893 Include_lines/sub_libs_needed ${MAKE_SCRIPT_PATH}build_include_lines_2
                if (${status}) then
                    ${P_STDERR} "Script build_include_lines_2 reported error to build_sub_libs_needed_4 in ${cwd}."
                    set exit_status = 1
                    goto end_of_script
                endif 
        else 
            ${VERBOSE_ECHO} " "
            ${VERBOSE_ECHO} "${VERBOSE_INDENT}------- Directory ${recurse_dir_str} already visited recently (no recursion needed) ----------"
            ${VERBOSE_ECHO} " "
        endif 

        set recurse_success = 0

        # These tests should mimic the ones above leading to the attempt to build. 

        if (! -e "Include_lines/sub_libs_needed") then
            ${VERBOSE_ECHO_2} "${VERBOSE_INDENT}------- After recursion ${cwd}/Include_lines/sub_libs_needed still does not exist ----------"
        else if (! -e "Include_lines/include_lines") then
            ${VERBOSE_ECHO_2} "${VERBOSE_INDENT}------- After recursion ${cwd}/Include_lines/include_lines still does not exist ----------"
        else
            set too_old = `${MAKE_SCRIPT_PATH}test_older_than Include_lines/sub_libs_needed Include_lines/include_lines`
            if (${too_old}) then
                ${VERBOSE_ECHO_2} "${VERBOSE_INDENT}------- After recursion ${cwd}/Include_lines/sub_libs_needed is too old ----------"
            else 
                ${VERBOSE_ECHO_2} "${VERBOSE_INDENT}------- After recursion ${cwd}/Include_lines/sub_libs_needed is OK ----------"
                set recurse_success = 1
            endif 
        endif 

        if (! ${recurse_success}) then
            set exit_status = 1
            ${P_STDERR} "Parallel build of sub_libs_needed in ${cwd} FAILED."
            goto end_of_script
        endif 
    popd  > /dev/null

end_of_script: 

${VERBOSE_ECHO} "${VERBOSE_INDENT}Leaving script build_sub_libs_needed_4 with status ${exit_status} in ${cwd}."

exit ${exit_status}

