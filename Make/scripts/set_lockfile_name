
# Shared block of code between ivi_lock_create and ivi_lock_remove (and thus
# also called indirectly by ivi_lock and ivi_lock_for_make. If the variable
# only_set_lockfile_directory is set, then we set IVI_LOCKFILE_PATH, and create
# the directory, but do not continue onto setting tbe variable lock_file. 

if (! $?IVI_LOCKFILE_PATH) then
    if ($?PREFER_LOCAL_PATH) then
        setenv IVI_LOCKFILE_PATH "${IVI_LOCKFILE_LOCAL_PATH}"
    endif 
        setenv IVI_LOCKFILE_PATH "${IVI_LOCKFILE_DEFAULT_PATH}"
    endif 
endif 

${VERBOSE_ECHO_2} "${VERBOSE_INDENT}Source script set_lockfile_name using lockfile directory ${IVI_LOCKFILE_PATH}"

${IVI_MKDIR} "${IVI_LOCKFILE_PATH}"

if ($status) then
    $P_STDERR "Unable to make directory ${IVI_LOCKFILE_PATH}"
    exit 1
endif 

if ($?only_set_lockfile_directory) exit 

if ($?IVI_LOCKFILE_NAME) then
    set looks_like_abs_path = `echo ${IVI_LOCKFILE_NAME} | grep -c '^/'`
    set looks_like_path = `echo ${IVI_LOCKFILE_NAME} | grep -c '/'`

    if (${looks_like_abs_path}) then
        set lock_file = "${IVI_LOCKFILE_NAME}"
    else if (${looks_like_path}) then
        set lock_file = "${cwd}/${IVI_LOCKFILE_NAME}"
    else 
        set lock_file = ${IVI_LOCKFILE_PATH}${IVI_LOCKFILE_NAME}.lock
    endif 
else
    set lock_file = ${IVI_LOCKFILE_PATH}${lock_label}.lock
endif 

${VERBOSE_ECHO_2} "${VERBOSE_INDENT}Source script set_lockfile_name setting lock_file to ${lock_file}"

