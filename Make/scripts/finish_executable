#!/bin/tcsh -f 

${VERBOSE_ECHO} "Entering script finish_executable in directory ${cwd} with args: $*"

if ($# != 2) then
    ${P_STDERR} "Script finish_executable needs two arguments."
    exit 1
endif 

set exec_path = "$1"
set exec_name = "$2"

${IVI_PERMIT_EXECUTION} "${exec_path}" 
if (${status}) then
    ${P_STDERR} "Permitting execution failed in script finish_executable."
    exit 1
endif

set link_to_top = 1

#
# The following could be made fancier by consulting the currently inactive
# script:
#     check_executable_path

# Generally, we do not use this script if we are using Kobus's environmewnt.
# However, we check them here to be sure.
# 
if ($?KJB_ENVIRONMENT) then
    ${VERBOSE_ECHO_2} "KJB_ENVIRONMENT is set to ->${KJB_ENVIRONMENT}<- in script finish_executable."

    if (${KJB_ENVIRONMENT}) then 
        set link_to_top = 0
    endif 
else 
    ${VERBOSE_ECHO_2} "KJB_ENVIRONMENT is not set in script finish_executable."
endif 

if ($?DONT_LINK_EXECUTABLE) then
    ${VERBOSE_ECHO_2} "DONT_LINK_EXECUTABLE is set to ->${DONT_LINK_EXECUTABLE}<- in script finish_executable."

    # DONT_LINK_EXECUTABLE is a toggle, either it is set or not. But if we
    # forget that, and set it to 0, then we probably are trying to unset it.
    #
    if ("${DONT_LINK_EXECUTABLE}" != 0) then 
        set link_to_top = 0
    endif 
else
    ${VERBOSE_ECHO_2} "DONT_LINK_EXECUTABLE is not set in script finish_executable."
endif 

# Currently, FORCE_LINK_EXECUTABLE is only used in this script. It is not clear
# if this should override DONT_LINK_EXECUTABLE or the other way arround. 
#
if ($?FORCE_LINK_EXECUTABLE) then
    ${VERBOSE_ECHO_2} "FORCE_LINK_EXECUTABLE is set to ->${FORCE_LINK_EXECUTABLE}<- in script finish_executable."

    # FORCE_LINK_EXECUTABLE is a flag, either it is set or not. But if we
    # forget that, and set it to 0, then we probably are trying to unset it.
    #
    if ("${FORCE_LINK_EXECUTABLE}" != 0) then 
        set link_to_top = 1
    endif 
else
    ${VERBOSE_ECHO_2} "FORCE_LINK_EXECUTABLE is not set in script finish_executable."
endif 

pushd ${LD_OBJ_TOP_DIR} > /dev/null
    ${MAKE_SCRIPT_PATH}ivi_lock 5 ${MAKE_SCRIPT_PATH}make_link ${LD_OBJ_SUB_DIR} ${EXEC_LINK_NAME}
    if (${status}) then
        ${P_STDERR} "Script make_link failed under lock in script finish_executable."
        exit 1
     endif 
popd > /dev/null

if (-e "${exec_name}") then
    if (! -l "${exec_name}") then
        ${WARN_ECHO} "Executable ${exec_name} exists and is not a link."
        ${WARN_ECHO} "Forcing removal of ${exec_name} to reduce confusion due to apparantly being up to date."
    else if (! ${link_to_top}) then
        ${WARN_ECHO} "Removing link ${exec_name} as we are not linking executables."
    endif 

    ${IVI_RM} "${exec_name}"
endif 

if (${link_to_top}) then
    if (! $?IVI_QUIET) then 
        ${WARN_ECHO} "Linking executable ${EXEC_LINK}/${exec_name} to ./${exec_name}."
        ${WARN_ECHO} echo "This can be disabled by 'unsetenv FORCE_LINK_EXECUTABLE; setenv DONT_LINK_EXECUTABLE 1'"
        ${WARN_ECHO} echo " "
    endif


    ${IVI_LN} "${EXEC_LINK}/${exec_name}" .
    if (${status}) then
        ${P_STDERR} "Link command failed in script finish_executable."
        ${P_STDERR} "Full failed command: ${IVI_LN} ${EXEC_LINK}/${exec_name} . "
        exit 1
     endif 

    set is_dylib = `echo ${exec_name} | grep -c '\.dylib$'`
    set is_so = `echo ${exec_name} | grep -c '\.so$'`
    set is_archive = `echo ${exec_name} | grep -c '\.a$'`
    
    if ((${is_dylib}) || (${is_so}) || (${is_archive})) then
        set base_name = `echo ${exec_name} | sed 's/\.[^\.][^\.]*$//'`

        if (! $?IVI_QUIET) then 
            echo "Linking library ${exec_name} to ${base_name}."
        endif 
        
        if (-e "${base_name}") then
            if (! -l "${base_name}") then
                ${WARN_ECHO} "Executable ${base_name} exists and is not a link."
                ${WARN_ECHO} "Forcing removal of ${base_name} to reduce confusion due to apparantly being up to date."
            endif 

            ${IVI_RM} "${base_name}"
            if (${status}) then
                ${P_STDERR} "Command failed in script finish_executable: ${IVI_RM} ${base_name}"
                exit 1
             endif 
        endif 

        ${IVI_LN} "${exec_name}" "${base_name}"
        if (${status}) then
            ${P_STDERR} "Link command failed in script finish_executable: ${IVI_LN} ${exec_name} ${base_name}"
            exit 1
         endif 
    endif 
endif 


${VERBOSE_ECHO} "Leaving script finish_executable in directory ${cwd} with success."



