 
include $(MAKE_PATH)Makefile-program

################################################################################
#
#              Build and include Makefile-test-depend
#

# ------------------------------------------
#
# Makefile-test-depend-3

Makefile-test-depend-3 : ./test_input
	@$(ECHO_UNLESS_QUIET)  " "
	@$(ECHO_UNLESS_QUIET)  "================================================================================"
	@$(ECHO_UNLESS_QUIET)  "                         Building Makefile-test-depend-3" 
	@$(ECHO_UNLESS_QUIET)  " "
	$(MAKE_SCRIPT_PATH)build_test_depend_3 > Makefile-test-depend-3
	@$(ECHO_UNLESS_QUIET)  " "
	@$(ECHO_UNLESS_QUIET)  "                         Makefile-test-depend-3 is built" 
	@$(ECHO_UNLESS_QUIET)  "================================================================================"
	@$(ECHO_UNLESS_QUIET)  " "

include Makefile-test-depend-3

# -------------------------------------------
#
# Makefile-test-depend-2. 

# The rule to build test_programs is the exact same as that for
# Makefile-test-depend-3. This covers the case that test_programs has gone
# missing, but Makefile-test-depend-3 is fine. 
#
Include_lines/test_programs: Makefile-test-depend-3  
	$(MAKE_SCRIPT_PATH)build_test_depend_3 > Makefile-test-depend-3

Makefile-test-depend-2 : $(MAKE_SCRIPT_PATH)build_test_depend_2 Include_lines/test_programs
	@$(ECHO_UNLESS_QUIET)  " "
	@$(ECHO_UNLESS_QUIET)  "================================================================================"
	@$(ECHO_UNLESS_QUIET)  "                         Building Makefile-test-depend-2" 
	@$(ECHO_UNLESS_QUIET)  " "
	$(MAKE_SCRIPT_PATH)build_test_depend_2 < Include_lines/test_programs > Makefile-test-depend-2
	@$(ECHO_UNLESS_QUIET)  " "
	@$(ECHO_UNLESS_QUIET)  "                         Makefile-test-depend-2 is built" 
	@$(ECHO_UNLESS_QUIET)  "================================================================================"
	@$(ECHO_UNLESS_QUIET)  " "

include Makefile-test-depend-2

# ------------------------------------------
#
# Makefile-test-depend. 

# The rule to build test_instances is the exact same as that for
# Makefile-test-depend-2. This covers the case that test_instances has gone
# missing, but Makefile-test-depend-2 is fine. 
#
Include_lines/test_instances: Makefile-test-depend-2  
	$(MAKE_SCRIPT_PATH)build_test_depend_2 < Include_lines/test_programs > Makefile-test-depend-2

Makefile-test-depend : $(MAKE_SCRIPT_PATH)build_test_depend Include_lines/test_instances
	@$(ECHO_UNLESS_QUIET)  " "
	@$(ECHO_UNLESS_QUIET)  "================================================================================"
	@$(ECHO_UNLESS_QUIET)  "                         Building Makefile-test-depend" 
	@$(ECHO_UNLESS_QUIET)  " "
	$(MAKE_SCRIPT_PATH)build_test_depend < Include_lines/test_instances > Makefile-test-depend
	@$(ECHO_UNLESS_QUIET)  " "
	@$(ECHO_UNLESS_QUIET)  "                         Makefile-test-depend is built" 
	@$(ECHO_UNLESS_QUIET)  "================================================================================"
	@$(ECHO_UNLESS_QUIET)  " "

include Makefile-test-depend

.PHONY : test
test : $(TEST_TARGETS)

.PHONY : regress
regress : $(REGRESS_TARGETS)

.PHONY : test_svn
test_svn : $(TEST_SVN_TARGETS)


# Cleaning test is problematic due to svn. We will experiment with having svn do the removal. 
#
.PHONY : test_clean
test_clean : regress_clean
	@$(ECHO_UNLESS_QUIET) "Cleaning some test book keeping files, but leaving 'output_checked' as is."
	@$(ECHO_UNLESS_QUIET) "Use target 'test_invalid' to remove `output_checked' files."
	@$(ECHO_UNLESS_QUIET) "Use target 'test_very_clean' to kill everying (not advised if you can avoid it due to SVN)."
	find test_runs -name 'run_succeeded' -exec ${MAKE_SCRIPT_PATH}ivi_svn_rm  {} \;

.PHONY : %.test_clean
%.test_clean : test_runs/%
	find $< -name 'run_succeeded' -exec ${MAKE_SCRIPT_PATH}ivi_svn_rm  {} \;

.PHONY : test_invalid
test_invalid : regress_clean
	find test_runs -name 'run_succeeded' -exec ${MAKE_SCRIPT_PATH}ivi_svn_rm  {} \;
	find test_runs -name 'output_checked' -exec ${MAKE_SCRIPT_PATH}ivi_svn_rm  {} \;

.PHONY : %.test_invalid
%.test_invalid : test_runs/%
	find $< -name 'run_succeeded' -exec ${MAKE_SCRIPT_PATH}ivi_svn_rm  {} \;
	find $< -name 'output_checked' -exec ${MAKE_SCRIPT_PATH}ivi_svn_rm  {} \;

.PHONY : test_very_clean
test_very_clean : 
	find test_runs -d -name 'test' -exec ${MAKE_SCRIPT_PATH}ivi_svn_rm  {} \;

.PHONY : %.test_very_clean
%.test_very_clean :  test_runs/%
	find $< -d -name 'test' -exec ${MAKE_SCRIPT_PATH}ivi_svn_rm  {} \;

.PHONY : regress_clean
regress_clean : 
	find test_runs -d -name 'regress' -exec /bin/rm -rf {} \;

.PHONY : %.regress_clean
%.regress_clean : test_runs/%
	find $< -d -name 'regress' -exec /bin/rm -rf  {} \;

